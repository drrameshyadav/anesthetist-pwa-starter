name: apply

on:
  issues:
    types: [opened, edited, reopened]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      issue_number:
        description: Issue number that contains file blocks to apply
        required: true
        type: number

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  apply:
    # Run if:
    # - manually triggered (workflow_dispatch), OR
    # - an issue event, OR
    # - a new comment that contains "/apply" on an issue (not PR)
    if: >
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'issues' ||
      (github.event_name == 'issue_comment' &&
       github.event.issue.pull_request == null &&
       contains(github.event.comment.body, '/apply'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Load issue body
        id: load
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = (context.eventName === 'workflow_dispatch')
              ? Number(core.getInput('issue_number'))
              : context.payload.issue.number;

            const { data: issue } = await github.rest.issues.get({
              ...context.repo,
              issue_number
            });

            core.setOutput('issue_number', String(issue_number));
            core.setOutput('body', issue.body || '');

      - name: Parse files from issue body and write them
        id: parse
        uses: actions/github-script@v7
        env:
          BODY: ${{ steps.load.outputs.body }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const body = process.env.BODY || '';

            // Canonical: ```file:path\n<content>```
            const reA = /```file:([^\n]+)\n([\s\S]*?)```/g;
            // Alternate: [file: path]\n```lang?\n<content>```
            const reB = /\[file:\s*([^\]]+?)\s*\]\s*```[a-zA-Z0-9_-]*\n([\s\S]*?)```/g;

            let count = 0;
            function writeOne(relPath, content) {
              const clean = relPath.trim().replace(/^\.?\//, '');
              const abs = path.join(process.cwd(), clean);
              fs.mkdirSync(path.dirname(abs), { recursive: true });
              fs.writeFileSync(abs, content, 'utf8');
              core.info(`Wrote ${clean}`);
              count++;
            }

            let m;
            while ((m = reA.exec(body)) !== null) writeOne(m[1], m[2]);
            while ((m = reB.exec(body)) !== null) writeOne(m[1], m[2]);

            core.setOutput('count', String(count));

            if (count === 0) {
              const msg = [
                "⚠️ I couldn't find any file blocks in this issue.",
                "",
                "Please use one of:",
                "",
                "1) Canonical:",
                "```",
                "```file:path/from/repo.root.ext",
                "<file contents>",
                "```",
                "```",
                "",
                "2) Alternate:",
                "[file: path/from/repo.root.ext]",
                "```<optional-language>",
                "<file contents>",
                "```",
                "",
                "Then re-open or edit the issue, or comment /apply."
              ].join('\n');

              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: Number(core.getInput('issue_number')) || context.payload.issue.number,
                body: msg
              });
              core.setFailed("No file blocks found in issue body");
            }

      - name: Create pull request
        if: steps.parse.outputs.count != '0'
        uses: peter-evans/create-pull-request@v6
        with:
          branch: chatgpt/apply-files-${{ github.run_id }}
          title: Apply files from issue #${{ steps.load.outputs.issue_number }}
          body: "Automated PR applying files from issue #${{ steps.load.outputs.issue_number }}."
          commit-message: "chore: apply files from issue #${{ steps.load.outputs.issue_number }}"
          add-paths: |
            .
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge (squash)
        if: steps.parse.outputs.count != '0'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create_pull_request.outputs.pull-request-number }}
          merge-method: squash
